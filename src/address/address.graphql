type Address {
  id: ID!
  street: String!
  city: String!
  state: String!
  country: String!
  zipCode: String!
  userId: String!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateAddressInput {
  street: String!
  city: String!
  state: String!
  country: String!
  zipCode: String!
  userId: String!
}

input UpdateAddressInput {
  id: ID!
  street: String
  city: String
  state: String
  country: String
  zipCode: String
  userId: String
}

type Query {
  getAddress(id: ID!): Address
  getAddresses: [Address!]!
}

type Mutation {
  createAddress(data: CreateAddressInput!): Address!
  updateAddress(id: ID!, data: UpdateAddressInput!): Address!
  deleteAddress(id: ID!): Address!
}

scalar DateTime